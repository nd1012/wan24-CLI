{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-CLI",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.CLI.CliApi.ParseType_Delegate.html": {
    "href": "api/wan24.CLI.CliApi.ParseType_Delegate.html",
    "title": "Delegate CliApi.ParseType_Delegate | wan24-CLI",
    "keywords": "Delegate CliApi.ParseType_Delegate Delegate for a custom argument type parser (needs to throw on error) Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public delegate object CliApi.ParseType_Delegate(string name, Type type, string arg, CliApiAttribute attr) Parameters Type Name Description string name Argument name Type type Type string arg Argument value CliApiAttribute attr Attribute Returns Type Description object Parsed object"
  },
  "api/wan24.CLI.CliApi.html": {
    "href": "api/wan24.CLI.CliApi.html",
    "title": "Class CliApi | wan24-CLI",
    "keywords": "Class CliApi CLI API helper Inheritance object CliApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class CliApi Properties | Edit this page View Source CommandLine The app command line to use Declaration public static string CommandLine { get; set; } Property Value Type Description string | Edit this page View Source CurrentContext Current CLI API context Declaration public static CliApiContext? CurrentContext { get; } Property Value Type Description CliApiContext | Edit this page View Source CustomArgumentParsers Custom argument type parser delegates Declaration public static Dictionary<Type, CliApi.ParseType_Delegate> CustomArgumentParsers { get; } Property Value Type Description Dictionary<Type, CliApi.ParseType_Delegate> | Edit this page View Source DisplayFullExceptions Display full exceptions in error messages? Declaration [CliConfig] public static bool DisplayFullExceptions { get; set; } Property Value Type Description bool | Edit this page View Source ExportedApis Exported APIs of the current run Declaration public static FrozenDictionary<string, CliApiInfo>? ExportedApis { get; } Property Value Type Description FrozenDictionary<string, CliApiInfo> | Edit this page View Source GeneralHeader General header message (Spectre.Console markup is supported) Declaration public static string? GeneralHeader { get; set; } Property Value Type Description string | Edit this page View Source GeneralHeaderDisplayed Has the general header message been displayed? Declaration public static bool GeneralHeaderDisplayed { get; } Property Value Type Description bool | Edit this page View Source HelpHeader Help header message (Spectre.Console markup is supported) Declaration public static string? HelpHeader { get; set; } Property Value Type Description string | Edit this page View Source HelpHeaderDisplayed Has the help header message been displayed? Declaration public static bool HelpHeaderDisplayed { get; } Property Value Type Description bool | Edit this page View Source Helper Helper (may implement ICliApiHelpProvider and/or ICliApiErrorHandler, too) Declaration public static ICliApiHelper Helper { get; set; } Property Value Type Description ICliApiHelper | Edit this page View Source StdErr STDERR ANSI console Declaration public static IAnsiConsole StdErr { get; } Property Value Type Description IAnsiConsole | Edit this page View Source UseInvokeAuto Use InvokeAuth for invoking API methods? Declaration public static bool UseInvokeAuto { get; set; } Property Value Type Description bool Methods | Edit this page View Source DisplayGeneralHeader() Display the gerneral header message Declaration public static void DisplayGeneralHeader() | Edit this page View Source DisplayHelpAsync(CliApiContext, bool) Display help Declaration public static Task<int> DisplayHelpAsync(CliApiContext context, bool useApi = true) Parameters Type Name Description CliApiContext context CLI API context bool useApi Use the APIs error handling / help provider? Returns Type Description Task<int> Exit code | Edit this page View Source DisplayHelpHeader() Display the help header message Declaration public static void DisplayHelpHeader() | Edit this page View Source RunAsync(string[]?, CancellationToken, params Type[]) Run the CLI API Declaration public static Task<int> RunAsync(string[]? args = null, CancellationToken cancellationToken = default, params Type[] exportedApis) Parameters Type Name Description string[] args Argument list CancellationToken cancellationToken Cancellation token Type[] exportedApis Exported APIs Returns Type Description Task<int> Exit code | Edit this page View Source RunAsync(CliArguments, string[]?, CancellationToken, params Type[]) Run the CLI API Declaration public static Task<int> RunAsync(CliArguments ca, string[]? args = null, CancellationToken cancellationToken = default, params Type[] exportedApis) Parameters Type Name Description CliArguments ca CLI arguments string[] args Argument list CancellationToken cancellationToken Cancellation token Type[] exportedApis Exported APIs Returns Type Description Task<int> Exit code | Edit this page View Source RunMultiAsync(string[]?, CancellationToken, params Type[]) Run multiple CLI API calls (chunk arguments for API calls using a dash -; any parsing error or exit code !=0 will cancel the execution loop; a call without any argument isn't supported; calls will be processed sequential) Declaration public static Task<int> RunMultiAsync(string[]? args = null, CancellationToken cancellationToken = default, params Type[] exportedApis) Parameters Type Name Description string[] args Argument list CancellationToken cancellationToken Cancellation token Type[] exportedApis Exported APIs Returns Type Description Task<int> Exit code"
  },
  "api/wan24.CLI.CliApiArgumentInfo.html": {
    "href": "api/wan24.CLI.CliApiArgumentInfo.html",
    "title": "Class CliApiArgumentInfo | wan24-CLI",
    "keywords": "Class CliApiArgumentInfo CLI API argument informations Inheritance object CliApiArgumentInfo Implements IEquatable<CliApiArgumentInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public record CliApiArgumentInfo : IEquatable<CliApiArgumentInfo> Constructors | Edit this page View Source CliApiArgumentInfo(CliApiMethodInfo, ParameterInfo, NullabilityInfoContext) COnstructor Declaration public CliApiArgumentInfo(CliApiMethodInfo method, ParameterInfo pi, NullabilityInfoContext nic) Parameters Type Name Description CliApiMethodInfo method Method ParameterInfo pi Parameter NullabilityInfoContext nic NullabilityInfoContext | Edit this page View Source CliApiArgumentInfo(CliApiMethodInfo, PropertyInfoExt, NullabilityInfoContext) Constructor Declaration public CliApiArgumentInfo(CliApiMethodInfo method, PropertyInfoExt pi, NullabilityInfoContext nic) Parameters Type Name Description CliApiMethodInfo method Method PropertyInfoExt pi Property NullabilityInfoContext nic NullabilityInfoContext Properties | Edit this page View Source ArgumentName Argument name (including dash prefix) Declaration public string ArgumentName { get; } Property Value Type Description string | Edit this page View Source Attribute CliApiAttribute Declaration public CliApiAttribute Attribute { get; } Property Value Type Description CliApiAttribute | Edit this page View Source ClrName Get the CLR name (used for a keyless argument) Declaration public string ClrName { get; } Property Value Type Description string | Edit this page View Source ClrType Value CLR type Declaration public Type ClrType { get; } Property Value Type Description Type | Edit this page View Source Description Description Declaration public string? Description { get; } Property Value Type Description string | Edit this page View Source Host Host type Declaration public CliArgumentHosts Host { get; } Property Value Type Description CliArgumentHosts | Edit this page View Source IsComplex Is a complex value type which requires JSON parsing? Declaration public bool IsComplex { get; } Property Value Type Description bool | Edit this page View Source IsKeyLess Is a keyless argument? Declaration public bool IsKeyLess { get; } Property Value Type Description bool | Edit this page View Source IsRequired Is required? Declaration public bool IsRequired { get; } Property Value Type Description bool | Edit this page View Source IsValueList Is a value list? Declaration public bool IsValueList { get; } Property Value Type Description bool | Edit this page View Source Method Method Declaration public CliApiMethodInfo Method { get; } Property Value Type Description CliApiMethodInfo | Edit this page View Source Name Name (excluding dash prefix) Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source ObjectProperties Argument object properties Declaration public FrozenDictionary<string, CliApiArgumentInfo>? ObjectProperties { get; protected set; } Property Value Type Description FrozenDictionary<string, CliApiArgumentInfo> | Edit this page View Source Parameter Parameter Declaration public ParameterInfo? Parameter { get; } Property Value Type Description ParameterInfo | Edit this page View Source Property Property Declaration public PropertyInfoExt? Property { get; } Property Value Type Description PropertyInfoExt | Edit this page View Source Title Title Declaration public string Title { get; } Property Value Type Description string | Edit this page View Source Type Argument type Declaration public CliArgumentTypes Type { get; } Property Value Type Description CliArgumentTypes Methods | Edit this page View Source SetObjectProperties(NullabilityInfoContext) Set the ObjectProperties value Declaration protected virtual void SetObjectProperties(NullabilityInfoContext nic) Parameters Type Name Description NullabilityInfoContext nic NullabilityInfoContext | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements IEquatable<T>"
  },
  "api/wan24.CLI.CliApiAttribute.html": {
    "href": "api/wan24.CLI.CliApiAttribute.html",
    "title": "Class CliApiAttribute | wan24-CLI",
    "keywords": "Class CliApiAttribute Attribute for a CLI API type, method and property and parameters Inheritance object Attribute CliApiAttribute CliApiFileStreamAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Parameter, AllowMultiple = true)] public class CliApiAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source CliApiAttribute(int, bool) Constructor Declaration public CliApiAttribute(int keyLessOffset, bool parseJson = false) Parameters Type Name Description int keyLessOffset Keyless argument offset (applies to a property or parameteter only) bool parseJson Parse JSON values? (applies to a property or parameteter only) | Edit this page View Source CliApiAttribute(string?, bool) Attribute for a CLI API type, method and property and parameters Declaration public CliApiAttribute(string? name = null, bool parseJson = false) Parameters Type Name Description string name API (method/argument) name bool parseJson Parse JSON values? Remarks Constructor Properties | Edit this page View Source CanParseArgument Can an argument value be parsed using ParseArgument(string, Type, string)? Declaration public virtual bool CanParseArgument { get; } Property Value Type Description bool | Edit this page View Source Example Example display value Declaration public string? Example { get; set; } Property Value Type Description string | Edit this page View Source HelpMethod Public static help method name (CliHelpApi.DetailHelp_Delegate) Declaration public string? HelpMethod { get; set; } Property Value Type Description string | Edit this page View Source HelpTextProperty Static help text property name (needs to return a string; Spectre.Console markup is supported) Declaration public string? HelpTextProperty { get; set; } Property Value Type Description string | Edit this page View Source IsDefault Is the default API (method)? Declaration public bool IsDefault { get; set; } Property Value Type Description bool | Edit this page View Source KeyLessOffset Keyless argument offset (applies to a property or parameteter only) Declaration public int KeyLessOffset { get; } Property Value Type Description int | Edit this page View Source Name API (method/argument) name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source ParseJson Parse JSON values? (applies to a property or parameteter only) Declaration public bool ParseJson { get; set; } Property Value Type Description bool Methods | Edit this page View Source GetApiInfo(Type, NullabilityInfoContext) Get API informations Declaration public virtual CliApiInfo? GetApiInfo(Type api, NullabilityInfoContext nic) Parameters Type Name Description Type api API type NullabilityInfoContext nic NullabilityInfoContext Returns Type Description CliApiInfo API informations | Edit this page View Source GetApiMethodInfo(CliApiInfo, MethodInfo, NullabilityInfoContext) Get API method informations Declaration public virtual CliApiMethodInfo? GetApiMethodInfo(CliApiInfo api, MethodInfo mi, NullabilityInfoContext nic) Parameters Type Name Description CliApiInfo api API MethodInfo mi Method NullabilityInfoContext nic NullabilityInfoContext Returns Type Description CliApiMethodInfo API method informations | Edit this page View Source GetArgumentInfo(CliApiMethodInfo, ParameterInfo, NullabilityInfoContext) Get API argument informations Declaration public virtual CliApiArgumentInfo? GetArgumentInfo(CliApiMethodInfo method, ParameterInfo pi, NullabilityInfoContext nic) Parameters Type Name Description CliApiMethodInfo method Method ParameterInfo pi Parameter NullabilityInfoContext nic NullabilityInfoContext Returns Type Description CliApiArgumentInfo API argument informations | Edit this page View Source GetArgumentInfo(CliApiMethodInfo, PropertyInfo, NullabilityInfoContext) Get API argument informations Declaration public virtual CliApiArgumentInfo? GetArgumentInfo(CliApiMethodInfo method, PropertyInfo pi, NullabilityInfoContext nic) Parameters Type Name Description CliApiMethodInfo method Method PropertyInfo pi Property NullabilityInfoContext nic NullabilityInfoContext Returns Type Description CliApiArgumentInfo API argument informations | Edit this page View Source GetHelpText() Get the help text (Spectre.Console markup is supported) Declaration public virtual string? GetHelpText() Returns Type Description string Help text | Edit this page View Source ParseArgument(string, Type, string) Parse an argument value Declaration public virtual object? ParseArgument(string name, Type type, string arg) Parameters Type Name Description string name Argument name (without dashes) Type type Argument type string arg Argument string value Returns Type Description object Parsed argument value of the given type Exceptions Type Condition NotSupportedException The CliApiAttribute doesn't support argument parsing | Edit this page View Source RunHelpMethod(object, CliApiContext) Run the help method, if defined Declaration public virtual bool RunHelpMethod(object apiElement, CliApiContext context) Parameters Type Name Description object apiElement API element CliApiContext context Context Returns Type Description bool If the method was executed"
  },
  "api/wan24.CLI.CliApiContext.html": {
    "href": "api/wan24.CLI.CliApiContext.html",
    "title": "Class CliApiContext | wan24-CLI",
    "keywords": "Class CliApiContext CLI API context Inheritance object CliApiContext Implements IEquatable<CliApiContext> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public sealed record CliApiContext : IEquatable<CliApiContext> Properties | Edit this page View Source API API instance Declaration public object? API { get; set; } Property Value Type Description object | Edit this page View Source Arguments CLI arguments Declaration public CliArguments? Arguments { get; set; } Property Value Type Description CliArguments | Edit this page View Source Exception Exception Declaration public Exception? Exception { get; set; } Property Value Type Description Exception | Edit this page View Source ExportedApis Exported APIs Declaration public Type[] ExportedApis { get; set; } Property Value Type Description Type[] | Edit this page View Source Method API method Declaration public MethodInfo? Method { get; set; } Property Value Type Description MethodInfo | Edit this page View Source Parameters API method parameters Declaration public object?[]? Parameters { get; set; } Property Value Type Description object[] Methods | Edit this page View Source GetArgumentHostType(string) Get an argument host type Declaration public CliArgumentHosts GetArgumentHostType(string arg) Parameters Type Name Description string arg Argument (excluding dash prefix) Returns Type Description CliArgumentHosts Argument host type | Edit this page View Source GetAvailableArguments() Get the available arguments Declaration public IEnumerable<string> GetAvailableArguments() Returns Type Description IEnumerable<string> Available arguments (sorted ascending; including dash prefix) | Edit this page View Source GetCliArgumentHostParameter(string) Get the CLI argument host parameter Declaration public ParameterInfo? GetCliArgumentHostParameter(string arg) Parameters Type Name Description string arg Argument (excluding dash prefix) Returns Type Description ParameterInfo Host parameter | Edit this page View Source GetCliArgumentHostProperty(string) Get the CLI argument host property Declaration public PropertyInfoExt? GetCliArgumentHostProperty(string arg) Parameters Type Name Description string arg Argument (excluding dash prefix) Returns Type Description PropertyInfoExt Host property | Edit this page View Source GetExportedApiMethodNames() Get the exported API methods Declaration public IEnumerable<string> GetExportedApiMethodNames() Returns Type Description IEnumerable<string> Exported API method names (sorted ascending) | Edit this page View Source GetExportedApiMethods() Get the exported API methods Declaration public IEnumerable<MethodInfo> GetExportedApiMethods() Returns Type Description IEnumerable<MethodInfo> Exported API methods | Edit this page View Source GetExportedApiNames() Get the exported API names Declaration public IEnumerable<string> GetExportedApiNames() Returns Type Description IEnumerable<string> Exported API names (sorted ascending) Implements IEquatable<T>"
  },
  "api/wan24.CLI.CliApiFileStreamAttribute.html": {
    "href": "api/wan24.CLI.CliApiFileStreamAttribute.html",
    "title": "Class CliApiFileStreamAttribute | wan24-CLI",
    "keywords": "Class CliApiFileStreamAttribute CLI API FileStream argument value attribute Inheritance object Attribute CliApiAttribute CliApiFileStreamAttribute Inherited Members CliApiAttribute.Name CliApiAttribute.IsDefault CliApiAttribute.KeyLessOffset CliApiAttribute.ParseJson CliApiAttribute.Example CliApiAttribute.HelpTextProperty CliApiAttribute.HelpMethod CliApiAttribute.GetHelpText() CliApiAttribute.RunHelpMethod(object, CliApiContext) CliApiAttribute.GetApiInfo(Type, NullabilityInfoContext) CliApiAttribute.GetApiMethodInfo(CliApiInfo, MethodInfo, NullabilityInfoContext) CliApiAttribute.GetArgumentInfo(CliApiMethodInfo, PropertyInfo, NullabilityInfoContext) CliApiAttribute.GetArgumentInfo(CliApiMethodInfo, ParameterInfo, NullabilityInfoContext) Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Parameter)] public class CliApiFileStreamAttribute : CliApiAttribute Constructors | Edit this page View Source CliApiFileStreamAttribute(string?) Constructor Declaration public CliApiFileStreamAttribute(string? name = null) Parameters Type Name Description string name CLI argument name Properties | Edit this page View Source Access File access Declaration public FileAccess Access { get; set; } Property Value Type Description FileAccess | Edit this page View Source CanParseArgument Can an argument value be parsed using ParseArgument(string, Type, string)? Declaration public override bool CanParseArgument { get; } Property Value Type Description bool Overrides CliApiAttribute.CanParseArgument | Edit this page View Source Mode File mode Declaration public FileMode Mode { get; set; } Property Value Type Description FileMode | Edit this page View Source Overwrite Overwrite? (clears file contents of an existing file) Declaration public bool Overwrite { get; set; } Property Value Type Description bool | Edit this page View Source Share File share Declaration public FileShare Share { get; set; } Property Value Type Description FileShare | Edit this page View Source UnixMode Unix mode Declaration public UnixFileMode? UnixMode { get; set; } Property Value Type Description UnixFileMode? Methods | Edit this page View Source ParseArgument(string, Type, string) Parse an argument value Declaration public override object? ParseArgument(string name, Type type, string arg) Parameters Type Name Description string name Argument name (without dashes) Type type Argument type string arg Argument string value Returns Type Description object Parsed argument value of the given type Overrides CliApiAttribute.ParseArgument(string, Type, string) Exceptions Type Condition NotSupportedException The CliApiAttribute doesn't support argument parsing"
  },
  "api/wan24.CLI.CliApiHelper.html": {
    "href": "api/wan24.CLI.CliApiHelper.html",
    "title": "Class CliApiHelper | wan24-CLI",
    "keywords": "Class CliApiHelper CLI API default helper Inheritance object CliApiHelper Implements ICliApiHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public class CliApiHelper : ICliApiHelper Constructors | Edit this page View Source CliApiHelper() Constructor Declaration public CliApiHelper() Properties | Edit this page View Source Default Default instance Declaration public static CliApiHelper Default { get; } Property Value Type Description CliApiHelper Methods | Edit this page View Source DisplayHelp(CliApiContext) Display context help Declaration public virtual int DisplayHelp(CliApiContext context) Parameters Type Name Description CliApiContext context Context Returns Type Description int Exit code Implements ICliApiHelper"
  },
  "api/wan24.CLI.CliApiInfo.html": {
    "href": "api/wan24.CLI.CliApiInfo.html",
    "title": "Class CliApiInfo | wan24-CLI",
    "keywords": "Class CliApiInfo CLI API informations Inheritance object CliApiInfo Implements IEquatable<CliApiInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public record CliApiInfo : IEquatable<CliApiInfo> Constructors | Edit this page View Source CliApiInfo(Type, NullabilityInfoContext?) Constructor Declaration public CliApiInfo(Type api, NullabilityInfoContext? nic = null) Parameters Type Name Description Type api CLI API type NullabilityInfoContext nic NullabilityInfoContext Properties | Edit this page View Source ApiMethodNameColor API method name color Declaration public static string ApiMethodNameColor { get; set; } Property Value Type Description string | Edit this page View Source ApiNameColor API name color Declaration public static string ApiNameColor { get; set; } Property Value Type Description string | Edit this page View Source Attribute CliApiAttribute Declaration public CliApiAttribute? Attribute { get; } Property Value Type Description CliApiAttribute | Edit this page View Source BackGroundColor Background color Declaration public static string BackGroundColor { get; set; } Property Value Type Description string | Edit this page View Source DecorationColor Decoration color Declaration public static string DecorationColor { get; set; } Property Value Type Description string | Edit this page View Source DefaultMethod Default API method Declaration public CliApiMethodInfo? DefaultMethod { get; } Property Value Type Description CliApiMethodInfo | Edit this page View Source Description Description Declaration public string? Description { get; } Property Value Type Description string | Edit this page View Source HighlightColor Highlight color Declaration public static string HighlightColor { get; set; } Property Value Type Description string | Edit this page View Source IsErrorHandler Is an error handler? Declaration public bool IsErrorHandler { get; } Property Value Type Description bool | Edit this page View Source IsHelpProvider Is a help provider? Declaration public bool IsHelpProvider { get; } Property Value Type Description bool | Edit this page View Source Methods API methods (key is the method name) Declaration public FrozenDictionary<string, CliApiMethodInfo> Methods { get; } Property Value Type Description FrozenDictionary<string, CliApiMethodInfo> | Edit this page View Source Name Name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source OptionalColor Optional color Declaration public static string OptionalColor { get; set; } Property Value Type Description string | Edit this page View Source RequiredColor Required color Declaration public static string RequiredColor { get; set; } Property Value Type Description string | Edit this page View Source Title Title Declaration public string Title { get; } Property Value Type Description string | Edit this page View Source Type CLI API type$\"{ Declaration public Type Type { get; } Property Value Type Description Type Methods | Edit this page View Source Create(params Type[]) Create for exported APIs Declaration public static FrozenDictionary<string, CliApiInfo> Create(params Type[] exportedApis) Parameters Type Name Description Type[] exportedApis Exported APIs Returns Type Description FrozenDictionary<string, CliApiInfo> Exported API informations Implements IEquatable<T>"
  },
  "api/wan24.CLI.CliApiInfosExtensions.html": {
    "href": "api/wan24.CLI.CliApiInfosExtensions.html",
    "title": "Class CliApiInfosExtensions | wan24-CLI",
    "keywords": "Class CliApiInfosExtensions CLI API informations extensions Inheritance object CliApiInfosExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class CliApiInfosExtensions Methods | Edit this page View Source FindExportedCliApis(IEnumerable<Assembly>, NullabilityInfoContext?) Find exported CLI API types Declaration public static IEnumerable<CliApiInfo> FindExportedCliApis(this IEnumerable<Assembly> ass, NullabilityInfoContext? nic = null) Parameters Type Name Description IEnumerable<Assembly> ass Assembly NullabilityInfoContext nic Nullability info context Returns Type Description IEnumerable<CliApiInfo> CLI API type informations | Edit this page View Source FindExportedCliApis(IEnumerable<Type>, NullabilityInfoContext?) Find exported CLI API types Declaration public static IEnumerable<CliApiInfo> FindExportedCliApis(this IEnumerable<Type> types, NullabilityInfoContext? nic = null) Parameters Type Name Description IEnumerable<Type> types Types NullabilityInfoContext nic Nullability info context Returns Type Description IEnumerable<CliApiInfo> CLI API type informations | Edit this page View Source FindExportedCliApis(Assembly, NullabilityInfoContext?) Find exported CLI API types Declaration public static IEnumerable<CliApiInfo> FindExportedCliApis(this Assembly ass, NullabilityInfoContext? nic = null) Parameters Type Name Description Assembly ass Assembly NullabilityInfoContext nic Nullability info context Returns Type Description IEnumerable<CliApiInfo> CLI API type informations | Edit this page View Source GetApiMethodSyntax(IReadOnlyDictionary<string, CliApiInfo>, string?, string?, string?) Get the API method call syntax Declaration public static string GetApiMethodSyntax(this IReadOnlyDictionary<string, CliApiInfo> infos, string? api = null, string? method = null, string? app = null) Parameters Type Name Description IReadOnlyDictionary<string, CliApiInfo> infos API informations string api API name string method Method name string app CLI app command to use Returns Type Description string Syntax (with Spectre.Console.Markup) | Edit this page View Source GetDefaultApi(IReadOnlyDictionary<string, CliApiInfo>) Get the default API Declaration public static CliApiInfo? GetDefaultApi(this IReadOnlyDictionary<string, CliApiInfo> infos) Parameters Type Name Description IReadOnlyDictionary<string, CliApiInfo> infos API infos Returns Type Description CliApiInfo Default API | Edit this page View Source IsCliHelpApiServed(IEnumerable<Type>) Determine if the CLI help API is served Declaration public static bool IsCliHelpApiServed(this IEnumerable<Type> exportedApis) Parameters Type Name Description IEnumerable<Type> exportedApis Exported API types Returns Type Description bool If the CLI help API is being served | Edit this page View Source IsCliHelpApiServed(IEnumerable<CliApiInfo>) Determine if the CLI help API is served Declaration public static bool IsCliHelpApiServed(this IEnumerable<CliApiInfo> apis) Parameters Type Name Description IEnumerable<CliApiInfo> apis API infos Returns Type Description bool If the CLI help API is being served | Edit this page View Source IsCliHelpApiServed(IReadOnlyDictionary<string, CliApiInfo>) Determine if the CLI help API is served Declaration public static bool IsCliHelpApiServed(this IReadOnlyDictionary<string, CliApiInfo> apis) Parameters Type Name Description IReadOnlyDictionary<string, CliApiInfo> apis API infos Returns Type Description bool If the CLI help API is being served"
  },
  "api/wan24.CLI.CliApiMethodInfo.html": {
    "href": "api/wan24.CLI.CliApiMethodInfo.html",
    "title": "Class CliApiMethodInfo | wan24-CLI",
    "keywords": "Class CliApiMethodInfo CLI API method informations Inheritance object CliApiMethodInfo Implements IEquatable<CliApiMethodInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public record CliApiMethodInfo : IEquatable<CliApiMethodInfo> Constructors | Edit this page View Source CliApiMethodInfo(CliApiInfo, MethodInfo, NullabilityInfoContext) Constructor Declaration public CliApiMethodInfo(CliApiInfo api, MethodInfo mi, NullabilityInfoContext nic) Parameters Type Name Description CliApiInfo api API MethodInfo mi API method NullabilityInfoContext nic NullabilityInfoContext Properties | Edit this page View Source API API Declaration public CliApiInfo API { get; } Property Value Type Description CliApiInfo | Edit this page View Source Attribute CliApiAttribute Declaration public CliApiAttribute? Attribute { get; } Property Value Type Description CliApiAttribute | Edit this page View Source Description Description Declaration public string? Description { get; } Property Value Type Description string | Edit this page View Source ExitCodes Exit codes Declaration public FrozenDictionary<int, ExitCodeInfo> ExitCodes { get; } Property Value Type Description FrozenDictionary<int, ExitCodeInfo> | Edit this page View Source Method API method Declaration public MethodInfo Method { get; } Property Value Type Description MethodInfo | Edit this page View Source Name Name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Parameters Parameters (key is the argument name without dash prefix) Declaration public FrozenDictionary<string, CliApiArgumentInfo> Parameters { get; } Property Value Type Description FrozenDictionary<string, CliApiArgumentInfo> | Edit this page View Source StdErr STDERR usage attribute Declaration public StdErrAttribute? StdErr { get; } Property Value Type Description StdErrAttribute | Edit this page View Source StdIn STDIN usage attribute Declaration public StdInAttribute? StdIn { get; } Property Value Type Description StdInAttribute | Edit this page View Source StdOut STDOUT usage attribute Declaration public StdOutAttribute? StdOut { get; } Property Value Type Description StdOutAttribute | Edit this page View Source Title Title Declaration public string Title { get; } Property Value Type Description string Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements IEquatable<T>"
  },
  "api/wan24.CLI.CliAppConfig.html": {
    "href": "api/wan24.CLI.CliAppConfig.html",
    "title": "Class CliAppConfig | wan24-CLI",
    "keywords": "Class CliAppConfig CLI app configuration (wan24.Core.AppConfig) Inheritance object AppConfigBase CliAppConfig Implements IAppConfig Inherited Members AppConfigBase.SetApplied AppConfigBase.ApplyProperties(bool) AppConfigBase.ApplyPropertiesAsync(bool, CancellationToken) AppConfigBase.Applied object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public class CliAppConfig : AppConfigBase, IAppConfig Constructors | Edit this page View Source CliAppConfig() Constructor Declaration public CliAppConfig() Properties | Edit this page View Source ApiMethodNameColor API method name color Declaration public string? ApiMethodNameColor { get; set; } Property Value Type Description string | Edit this page View Source ApiNameColor API name color Declaration public string? ApiNameColor { get; set; } Property Value Type Description string | Edit this page View Source AppliedCliConfig Applied CLI app configuration Declaration public static CliAppConfig? AppliedCliConfig { get; protected set; } Property Value Type Description CliAppConfig | Edit this page View Source BackGroundColor Background color Declaration public string? BackGroundColor { get; set; } Property Value Type Description string | Edit this page View Source ColorProfile Color profile name to use Declaration public string? ColorProfile { get; set; } Property Value Type Description string | Edit this page View Source ColorProfiles Color profiles Declaration public ConsoleColorProfile[]? ColorProfiles { get; set; } Property Value Type Description ConsoleColorProfile[] | Edit this page View Source DecorationColor Decoration color Declaration public string? DecorationColor { get; set; } Property Value Type Description string | Edit this page View Source HighlightColor Highlight color Declaration public string? HighlightColor { get; set; } Property Value Type Description string | Edit this page View Source OptionalColor Optional color Declaration public string? OptionalColor { get; set; } Property Value Type Description string | Edit this page View Source RequiredColor Required color Declaration public string? RequiredColor { get; set; } Property Value Type Description string Methods | Edit this page View Source Apply() Apply this app configuration Declaration public override void Apply() Overrides wan24.Core.AppConfigBase.Apply() | Edit this page View Source ApplyAsync(CancellationToken) Apply this app configuration Declaration public override Task ApplyAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides AppConfigBase.ApplyAsync(CancellationToken) Implements wan24.Core.IAppConfig"
  },
  "api/wan24.CLI.CliArgException.html": {
    "href": "api/wan24.CLI.CliArgException.html",
    "title": "Class CliArgException | wan24-CLI",
    "keywords": "Class CliArgException Thrown on CLI argument error Inheritance object Exception SystemException ArgumentException CliArgException Implements ISerializable Inherited Members ArgumentException.ThrowIfNullOrEmpty(string, string) ArgumentException.ThrowIfNullOrWhiteSpace(string, string) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [Serializable] public class CliArgException : ArgumentException, ISerializable Constructors | Edit this page View Source CliArgException() Constructor Declaration public CliArgException() | Edit this page View Source CliArgException(string?) Constructor Declaration public CliArgException(string? message) Parameters Type Name Description string message Message | Edit this page View Source CliArgException(string?, Exception?) Constructor Declaration public CliArgException(string? message, Exception? inner) Parameters Type Name Description string message Message Exception inner Inner exception | Edit this page View Source CliArgException(string?, string?) Constructor Declaration public CliArgException(string? message, string? argName) Parameters Type Name Description string message Message string argName Argument name | Edit this page View Source CliArgException(string?, string?, Exception?) Constructor Declaration public CliArgException(string? message, string? argName, Exception? inner) Parameters Type Name Description string message Message string argName Argument name Exception inner Inner exception Implements ISerializable"
  },
  "api/wan24.CLI.CliArgumentHosts.html": {
    "href": "api/wan24.CLI.CliArgumentHosts.html",
    "title": "Enum CliArgumentHosts | wan24-CLI",
    "keywords": "Enum CliArgumentHosts CLI argument type enumeration Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public enum CliArgumentHosts Fields Name Description None None (not found) Parameter Method parameter Property Type property"
  },
  "api/wan24.CLI.CliArgumentTypes.html": {
    "href": "api/wan24.CLI.CliArgumentTypes.html",
    "title": "Enum CliArgumentTypes | wan24-CLI",
    "keywords": "Enum CliArgumentTypes CLI argument types Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public enum CliArgumentTypes Fields Name Description Flag Boolean (flag) Object CLI argument object (see ICliArguments) Value String value(s)"
  },
  "api/wan24.CLI.CliArgumentsExtensions.html": {
    "href": "api/wan24.CLI.CliArgumentsExtensions.html",
    "title": "Class CliArgumentsExtensions | wan24-CLI",
    "keywords": "Class CliArgumentsExtensions wan24.Core.CliArguments extensions Inheritance object CliArgumentsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class CliArgumentsExtensions Methods | Edit this page View Source GetArgumentType(CliArguments, string) Get an argument type Declaration public static CliArgumentTypes? GetArgumentType(this CliArguments ca, string arg) Parameters Type Name Description CliArguments ca CLI arguments string arg Argument name (excluding dash prefix) Returns Type Description CliArgumentTypes? Argument type or null, if the argument wasn't found"
  },
  "api/wan24.CLI.CliHelpApi.DetailHelp_Delegate.html": {
    "href": "api/wan24.CLI.CliHelpApi.DetailHelp_Delegate.html",
    "title": "Delegate CliHelpApi.DetailHelp_Delegate | wan24-CLI",
    "keywords": "Delegate CliHelpApi.DetailHelp_Delegate Delegate for a help details handler Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public delegate void CliHelpApi.DetailHelp_Delegate(object apiElement, CliApiContext context) Parameters Type Name Description object apiElement API element (CliApiInfo, CliApiMethodInfo, CliApiArgumentInfo) CliApiContext context Context"
  },
  "api/wan24.CLI.CliHelpApi.html": {
    "href": "api/wan24.CLI.CliHelpApi.html",
    "title": "Class CliHelpApi | wan24-CLI",
    "keywords": "Class CliHelpApi CLI help API Inheritance object CliHelpApi Implements ICliApiHelpProvider ICliApiHelper ICliApiErrorHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [CliApi(\"help\", false)] [DisplayText(\"CLI help API\")] public class CliHelpApi : ICliApiHelpProvider, ICliApiHelper, ICliApiErrorHandler Constructors | Edit this page View Source CliHelpApi() Constructor Declaration public CliHelpApi() Properties | Edit this page View Source ApiMethodName API method name Declaration [CliApi(\"method\", false)] [DisplayText(\"Name of the API method to display help for\")] public string? ApiMethodName { get; set; } Property Value Type Description string | Edit this page View Source ApiName API method name Declaration [CliApi(\"api\", false)] [RequiredIf(\"ApiMethodName\", new object?[] { })] [DisplayText(\"Name of the API to display help for\")] public string? ApiName { get; set; } Property Value Type Description string | Edit this page View Source Details Print details, if available? Declaration [CliApi(null, false)] [DisplayText(\"Show help details, if available\")] public bool Details { get; set; } Property Value Type Description bool Methods | Edit this page View Source DisplayHelp(CliApiContext) Display context help Declaration protected virtual int DisplayHelp(CliApiContext context) Parameters Type Name Description CliApiContext context CLI API context Returns Type Description int Exit code | Edit this page View Source Help() Help Declaration [CliApi(null, false, IsDefault = true)] [DisplayText(\"Display CLI API help\")] [ExitCode(0, \"Default exit code\")] public virtual int Help() Returns Type Description int Exit code 0 Implements ICliApiHelpProvider ICliApiHelper ICliApiErrorHandler"
  },
  "api/wan24.CLI.CliProcessHelper.html": {
    "href": "api/wan24.CLI.CliProcessHelper.html",
    "title": "Class CliProcessHelper | wan24-CLI",
    "keywords": "Class CliProcessHelper CLI process helper Inheritance object CliProcessHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class CliProcessHelper Methods | Edit this page View Source RedirectOutputAsync(ProcessStream, bool, bool, CancellationToken) Redirect STDOUT/-ERR from a running process to our STDOUT/-ERR Declaration public static Task RedirectOutputAsync(ProcessStream proc, bool stdOut = true, bool stdErr = true, CancellationToken cancellationToken = default) Parameters Type Name Description ProcessStream proc Process bool stdOut STDOUT bool stdErr STDERR CancellationToken cancellationToken Cancellation token Returns Type Description Task"
  },
  "api/wan24.CLI.CliStream.html": {
    "href": "api/wan24.CLI.CliStream.html",
    "title": "Class CliStream | wan24-CLI",
    "keywords": "Class CliStream CLI stream (STDIN/-OUT) Inheritance object MarshalByRefObject Stream StreamBase BiDirectionalStream<Stream, Stream> BiDirectionalStream CliStream Implements IStream IDisposableObject IDisposable IAsyncDisposable IStatusProvider Inherited Members BiDirectionalStream<Stream, Stream>.Seek(long, SeekOrigin) BiDirectionalStream<Stream, Stream>.SetLength(long) BiDirectionalStream<Stream, Stream>.Flush() BiDirectionalStream<Stream, Stream>.FlushAsync(CancellationToken) BiDirectionalStream<Stream, Stream>.Read(byte[], int, int) BiDirectionalStream<Stream, Stream>.Read(Span<byte>) BiDirectionalStream<Stream, Stream>.ReadAsync(byte[], int, int, CancellationToken) BiDirectionalStream<Stream, Stream>.ReadAsync(Memory<byte>, CancellationToken) BiDirectionalStream<Stream, Stream>.ReadByte() BiDirectionalStream<Stream, Stream>.Write(byte[], int, int) BiDirectionalStream<Stream, Stream>.Write(ReadOnlySpan<byte>) BiDirectionalStream<Stream, Stream>.WriteAsync(byte[], int, int, CancellationToken) BiDirectionalStream<Stream, Stream>.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) BiDirectionalStream<Stream, Stream>.WriteByte(byte) BiDirectionalStream<Stream, Stream>.CopyTo(Stream, int) BiDirectionalStream<Stream, Stream>.CopyToAsync(Stream, int, CancellationToken) BiDirectionalStream<Stream, Stream>.BeginRead(byte[], int, int, AsyncCallback, object) BiDirectionalStream<Stream, Stream>.EndRead(IAsyncResult) BiDirectionalStream<Stream, Stream>.BeginWrite(byte[], int, int, AsyncCallback, object) BiDirectionalStream<Stream, Stream>.EndWrite(IAsyncResult) BiDirectionalStream<Stream, Stream>.Close() BiDirectionalStream<Stream, Stream>.Dispose(bool) BiDirectionalStream<Stream, Stream>.DisposeCore() BiDirectionalStream<Stream, Stream>.Readable BiDirectionalStream<Stream, Stream>.Writable BiDirectionalStream<Stream, Stream>.LeaveOpen BiDirectionalStream<Stream, Stream>.CanRead BiDirectionalStream<Stream, Stream>.CanSeek BiDirectionalStream<Stream, Stream>.CanWrite BiDirectionalStream<Stream, Stream>.CanTimeout BiDirectionalStream<Stream, Stream>.Length BiDirectionalStream<Stream, Stream>.Position BiDirectionalStream<Stream, Stream>.ReadTimeout BiDirectionalStream<Stream, Stream>.WriteTimeout BiDirectionalStream<Stream, Stream>.State StreamBase.SyncObject StreamBase.Close() StreamBase.DisposeAsync() StreamBase.Dispose(bool) StreamBase.DisposeCore() StreamBase.DoClose() StreamBase.EnsureUndisposed(in bool, in bool) StreamBase.IfUndisposed<T>(in T, in bool) StreamBase.IfUndisposed(in Action, in bool) StreamBase.IfUndisposed<T>(in Func<T>, in bool) StreamBase.IfUndisposedNullable<T>(in Func<T>, in bool) StreamBase.EnsureSeekable() StreamBase.EnsureWritable() StreamBase.EnsureReadable() StreamBase.Name StreamBase.IsClosed StreamBase.IsDisposed StreamBase.IsDisposing StreamBase.OnDisposing StreamBase.OnDisposed Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.Flush() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(byte[], int, int) Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadByte() Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Seek(long, SeekOrigin) Stream.SetLength(long) Stream.Synchronized(Stream) Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.Write(byte[], int, int) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanRead Stream.CanSeek Stream.CanTimeout Stream.CanWrite Stream.Length Stream.Position Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public class CliStream : BiDirectionalStream, IStream, IDisposableObject, IDisposable, IAsyncDisposable, IStatusProvider Remarks Constructor Constructors | Edit this page View Source CliStream(in bool) CLI stream (STDIN/-OUT) Declaration public CliStream(in bool leaveOpen = false) Parameters Type Name Description bool leaveOpen Leave the STDIN/-OUT streams open when disposing? Remarks Constructor Implements wan24.Core.IStream wan24.Core.IDisposableObject IDisposable IAsyncDisposable wan24.Core.IStatusProvider"
  },
  "api/wan24.CLI.ConsoleColorProfile.html": {
    "href": "api/wan24.CLI.ConsoleColorProfile.html",
    "title": "Class ConsoleColorProfile | wan24-CLI",
    "keywords": "Class ConsoleColorProfile Console color profile Inheritance object ConsoleColorProfile Implements IEquatable<ConsoleColorProfile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public record ConsoleColorProfile : IEquatable<ConsoleColorProfile> Constructors | Edit this page View Source ConsoleColorProfile() Constructor Declaration public ConsoleColorProfile() Fields | Edit this page View Source Registered Registered profiles (key is the name) Declaration public static readonly Dictionary<string, ConsoleColorProfile> Registered Field Value Type Description Dictionary<string, ConsoleColorProfile> Properties | Edit this page View Source ApiMethodNameColor API method name color Declaration public string ApiMethodNameColor { get; set; } Property Value Type Description string | Edit this page View Source ApiNameColor API name color Declaration public string ApiNameColor { get; set; } Property Value Type Description string | Edit this page View Source ApplyRegistered Apply a registered profile (set to the profile name) Declaration [CliConfig] public static string ApplyRegistered { set; } Property Value Type Description string | Edit this page View Source BackGroundColor Background color Declaration public string BackGroundColor { get; set; } Property Value Type Description string | Edit this page View Source DecorationColor Decoration color Declaration public string DecorationColor { get; set; } Property Value Type Description string | Edit this page View Source HighlightColor Highlight color Declaration public string HighlightColor { get; set; } Property Value Type Description string | Edit this page View Source Name Profile name Declaration public required string Name { get; init; } Property Value Type Description string | Edit this page View Source OptionalColor Optional color Declaration public string OptionalColor { get; set; } Property Value Type Description string | Edit this page View Source RequiredColor Required color Declaration public string RequiredColor { get; set; } Property Value Type Description string Methods | Edit this page View Source AddRegistered(params ConsoleColorProfile[]) Add registered profiles Declaration public static void AddRegistered(params ConsoleColorProfile[] profiles) Parameters Type Name Description ConsoleColorProfile[] profiles Profiles | Edit this page View Source Apply() Apply the profile Declaration public virtual void Apply() Implements IEquatable<T>"
  },
  "api/wan24.CLI.ConsoleIoHelper.Format.html": {
    "href": "api/wan24.CLI.ConsoleIoHelper.Format.html",
    "title": "Enum ConsoleIoHelper.Format | wan24-CLI",
    "keywords": "Enum ConsoleIoHelper.Format I/O exchange formats enumeration Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [Flags] public enum ConsoleIoHelper.Format Fields Name Description Base64 base64 Binary Binary (raw, without any encoding/decoding) ByteEncoding wan24.Core.ByteEncoding (UTF-8) ENCODING_FLAGS Encoding flags Environment Input source is an environment variable FLAGS All flags File Input source is a file (not or UTF-8 encoded) Hex Hexadecimal INPUT_FLAGS Input source flags Json Higher level JSON data format (must be deserialized from supporting code) SERIALIZER_FLAGS Serializer type flags String String (UTF-8) Xml Higher level XML data format (must be deserialized from supporting code) Extension Methods ConsoleIoHelper.ContainsSerializer(ConsoleIoHelper.Format) ConsoleIoHelper.GetObjectSerializer(ConsoleIoHelper.Format, in ObjectSerializer.Serializer)"
  },
  "api/wan24.CLI.ConsoleIoHelper.html": {
    "href": "api/wan24.CLI.ConsoleIoHelper.html",
    "title": "Class ConsoleIoHelper | wan24-CLI",
    "keywords": "Class ConsoleIoHelper Console I/O helper Inheritance object ConsoleIoHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class ConsoleIoHelper Methods | Edit this page View Source ContainsSerializer(Format) Determine if the format contains serializer instructions Declaration public static bool ContainsSerializer(this ConsoleIoHelper.Format format) Parameters Type Name Description ConsoleIoHelper.Format format Format Returns Type Description bool If serializer instructions are contained | Edit this page View Source GetInput(string?, in bool, string?, in string?, in bool, in char?, in bool, Format) Get console input Declaration public static Stream? GetInput(string? value = null, in bool useStdIn = true, string? envName = null, in string? inputPrompt = null, in bool isSecret = false, in char? secretMask = null, in bool allowEmpty = false, ConsoleIoHelper.Format format = Format.String) Parameters Type Name Description string value Given value (may be used as input filename, if format contains File; may be used as environment variable name, if format contains Environment; may be converted depending on the given format) bool useStdIn Use STDIN (won't be decoded)? string envName Environment variable name (will look into process, user and machine variables) string inputPrompt User input prompt (set to try user input; Spectre.Console markup is supported) bool isSecret If the user input is a secret char? secretMask User secret input mask character (optional) bool allowEmpty Allow an empty user input? ConsoleIoHelper.Format format Input format (user input or environment variable will be decoded accordingly) Returns Type Description Stream Input stream (is null, if no input was found; deserialization must be done from the calling code!) | Edit this page View Source GetObjectSerializer(Format, in Serializer) Get the object serializer from a format Declaration public static ObjectSerializer.Serializer GetObjectSerializer(this ConsoleIoHelper.Format format, in ObjectSerializer.Serializer defaultSerializer = Serializer.Json) Parameters Type Name Description ConsoleIoHelper.Format format Format ObjectSerializer.Serializer defaultSerializer Default serializer Returns Type Description ObjectSerializer.Serializer Object serialzer | Edit this page View Source GetSerializerFormat(Serializer) Get the consle I/O helper serializer format enumeration value Declaration public static ConsoleIoHelper.Format GetSerializerFormat(this ObjectSerializer.Serializer serializer) Parameters Type Name Description ObjectSerializer.Serializer serializer Serializer Returns Type Description ConsoleIoHelper.Format Format flag | Edit this page View Source SendOutput(in Stream, Stream?, in string?, in Format, in int) Send output from a stream (NO Spectre.Console markup is supported!) Declaration public static int SendOutput(in Stream stream, Stream? output = null, in string? fileName = null, in ConsoleIoHelper.Format format = Format.Binary, in int exitCode = 0) Parameters Type Name Description Stream stream Data stream (will be encoded depending on the given format, if not Binary or String) Stream output Output stream (will be disposed) string fileName Output filename (if null, and output is null also, STDOUT will be used ConsoleIoHelper.Format format Output format int exitCode Exit code Returns Type Description int Exit code | Edit this page View Source SendOutputAsync(Stream, Stream?, string?, Format, int, CancellationToken) Send output from a stream (NO Spectre.Console markup is supported!) Declaration public static Task<int> SendOutputAsync(Stream stream, Stream? output = null, string? fileName = null, ConsoleIoHelper.Format format = Format.Binary, int exitCode = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream Data stream (will be encoded depending on the given format, if not Binary or String) Stream output Output stream (will be disposed) string fileName Output filename (if null, and output is null also, STDOUT will be used ConsoleIoHelper.Format format Output format int exitCode Exit code CancellationToken cancellationToken Cancellation token Returns Type Description Task<int> Exit code"
  },
  "api/wan24.CLI.ExitCodeAttribute.html": {
    "href": "api/wan24.CLI.ExitCodeAttribute.html",
    "title": "Class ExitCodeAttribute | wan24-CLI",
    "keywords": "Class ExitCodeAttribute Attrbute for documenting CLI API method exit codes Inheritance object Attribute ExitCodeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class ExitCodeAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source ExitCodeAttribute(int, string?) Attrbute for documenting CLI API method exit codes Declaration public ExitCodeAttribute(int code, string? description = null) Parameters Type Name Description int code Exit code string description Description Remarks Constructor Properties | Edit this page View Source Code Exit code Declaration public int Code { get; } Property Value Type Description int | Edit this page View Source Description Description Declaration public string? Description { get; } Property Value Type Description string"
  },
  "api/wan24.CLI.ExitCodeInfo.html": {
    "href": "api/wan24.CLI.ExitCodeInfo.html",
    "title": "Class ExitCodeInfo | wan24-CLI",
    "keywords": "Class ExitCodeInfo Exit code information Inheritance object ExitCodeInfo Implements IEquatable<ExitCodeInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public record ExitCodeInfo : IEquatable<ExitCodeInfo> Remarks Constructor Constructors | Edit this page View Source ExitCodeInfo(CliApiInfo, CliApiMethodInfo, ExitCodeAttribute) Exit code information Declaration public ExitCodeInfo(CliApiInfo api, CliApiMethodInfo method, ExitCodeAttribute attr) Parameters Type Name Description CliApiInfo api API CliApiMethodInfo method API method ExitCodeAttribute attr Attribute Remarks Constructor Properties | Edit this page View Source API API Declaration public CliApiInfo API { get; } Property Value Type Description CliApiInfo | Edit this page View Source Attribute Attribute Declaration public ExitCodeAttribute Attribute { get; } Property Value Type Description ExitCodeAttribute | Edit this page View Source Code Exit code Declaration public int Code { get; } Property Value Type Description int | Edit this page View Source Description Description Declaration public string? Description { get; } Property Value Type Description string | Edit this page View Source Method API method Declaration public CliApiMethodInfo Method { get; } Property Value Type Description CliApiMethodInfo | Edit this page View Source api API Declaration public CliApiInfo api { get; init; } Property Value Type Description CliApiInfo | Edit this page View Source attr Attribute Declaration public ExitCodeAttribute attr { get; init; } Property Value Type Description ExitCodeAttribute | Edit this page View Source method API method Declaration public CliApiMethodInfo method { get; init; } Property Value Type Description CliApiMethodInfo Implements IEquatable<T>"
  },
  "api/wan24.CLI.ICliApiErrorHandler.html": {
    "href": "api/wan24.CLI.ICliApiErrorHandler.html",
    "title": "Interface ICliApiErrorHandler | wan24-CLI",
    "keywords": "Interface ICliApiErrorHandler Interface for a CLI API which implements error handling Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public interface ICliApiErrorHandler Methods | Edit this page View Source HandleApiErrorAsync(CliApiContext) Handle an API error Declaration Task<int> HandleApiErrorAsync(CliApiContext context) Parameters Type Name Description CliApiContext context CLI API context Returns Type Description Task<int> Exit code"
  },
  "api/wan24.CLI.ICliApiHelpProvider.html": {
    "href": "api/wan24.CLI.ICliApiHelpProvider.html",
    "title": "Interface ICliApiHelpProvider | wan24-CLI",
    "keywords": "Interface ICliApiHelpProvider Interface for a CLI API which provides context help Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public interface ICliApiHelpProvider Methods | Edit this page View Source DisplayHelp(CliApiContext) Display context help Declaration int DisplayHelp(CliApiContext context) Parameters Type Name Description CliApiContext context CLI API context Returns Type Description int Exit code"
  },
  "api/wan24.CLI.ICliApiHelper.html": {
    "href": "api/wan24.CLI.ICliApiHelper.html",
    "title": "Interface ICliApiHelper | wan24-CLI",
    "keywords": "Interface ICliApiHelper Interface for a CLI API helper Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public interface ICliApiHelper Methods | Edit this page View Source DisplayHelp(CliApiContext) Display context help Declaration int DisplayHelp(CliApiContext context) Parameters Type Name Description CliApiContext context Context Returns Type Description int Exit code"
  },
  "api/wan24.CLI.ICliArguments.html": {
    "href": "api/wan24.CLI.ICliArguments.html",
    "title": "Interface ICliArguments | wan24-CLI",
    "keywords": "Interface ICliArguments Interface for a type which hosts CLI arguments (the type needs to export a public constructor without any or with DI servable-only parameters; the type can be used as an API method parameter type (property type-usage isn't supported)) Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public interface ICliArguments"
  },
  "api/wan24.CLI.ReflectionExtensions.html": {
    "href": "api/wan24.CLI.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | wan24-CLI",
    "keywords": "Class ReflectionExtensions Reflection extensions Inheritance object ReflectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class ReflectionExtensions Methods | Edit this page View Source FindCliArgumentMember(Type, string, MethodInfo?) Find a CLI argument target member by its property/parameter name Declaration public static object? FindCliArgumentMember(this Type api, string member, MethodInfo? mi = null) Parameters Type Name Description Type api API type string member Member name (of the property or parameter) MethodInfo mi API method Returns Type Description object PropertyInfo or ParameterInfo | Edit this page View Source GetArgumentHostType(Type, string, MethodInfo?) Get an argument host type Declaration public static CliArgumentHosts GetArgumentHostType(this Type api, string arg, MethodInfo? mi = null) Parameters Type Name Description Type api API type string arg Argument (excluding dash prefix) MethodInfo mi API method Returns Type Description CliArgumentHosts Argument host type | Edit this page View Source GetAvailableArguments(Type, MethodInfo?) Get the available (named!) arguments Declaration public static IEnumerable<string> GetAvailableArguments(this Type api, MethodInfo? mi = null) Parameters Type Name Description Type api API type MethodInfo mi API method Returns Type Description IEnumerable<string> Available arguments (sorted ascending; including dash prefix) | Edit this page View Source GetCliApiArgumentName(ParameterInfo, CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiArgumentName(this ParameterInfo pi, CliApiAttribute? attr = null) Parameters Type Name Description ParameterInfo pi CLI argument CliApiAttribute attr CliApiAttribute Returns Type Description string CLI argument name | Edit this page View Source GetCliApiArgumentName(ParameterInfo, out CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiArgumentName(this ParameterInfo pi, out CliApiAttribute? attr) Parameters Type Name Description ParameterInfo pi CLI argument CliApiAttribute attr CliApiAttribute Returns Type Description string CLI argument name | Edit this page View Source GetCliApiArgumentName(PropertyInfo, CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiArgumentName(this PropertyInfo pi, CliApiAttribute? attr = null) Parameters Type Name Description PropertyInfo pi CLI argument CliApiAttribute attr CliApiAttribute Returns Type Description string CLI argument name | Edit this page View Source GetCliApiArgumentName(PropertyInfo, out CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiArgumentName(this PropertyInfo pi, out CliApiAttribute? attr) Parameters Type Name Description PropertyInfo pi CLI argument CliApiAttribute attr CliApiAttribute Returns Type Description string CLI argument name | Edit this page View Source GetCliApiMethodName(MethodInfo, CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiMethodName(this MethodInfo mi, CliApiAttribute? attr = null) Parameters Type Name Description MethodInfo mi CLI API method CliApiAttribute attr CliApiAttribute Returns Type Description string CLI API method name | Edit this page View Source GetCliApiMethodName(MethodInfo, out CliApiAttribute?) Get the CLI API method name Declaration public static string GetCliApiMethodName(this MethodInfo mi, out CliApiAttribute? attr) Parameters Type Name Description MethodInfo mi CLI API method CliApiAttribute attr CliApiAttribute Returns Type Description string CLI API method name | Edit this page View Source GetCliApiName(Type, CliApiAttribute?) Get the CLI API name Declaration public static string GetCliApiName(this Type type, CliApiAttribute? attr = null) Parameters Type Name Description Type type CLI API type CliApiAttribute attr CliApiAttribute Returns Type Description string CLI API name | Edit this page View Source GetCliApiName(Type, out CliApiAttribute?) Get the CLI API name Declaration public static string GetCliApiName(this Type type, out CliApiAttribute? attr) Parameters Type Name Description Type type CLI API type CliApiAttribute attr CliApiAttribute Returns Type Description string CLI API name | Edit this page View Source GetCliArgumentHostParameter(Type, string, MethodInfo?) Get the CLI argument host parameter Declaration public static ParameterInfo? GetCliArgumentHostParameter(this Type api, string arg, MethodInfo? mi = null) Parameters Type Name Description Type api API type string arg Argument (excluding dash prefix) MethodInfo mi API method Returns Type Description ParameterInfo Host parameter | Edit this page View Source GetCliArgumentHostProperty(Type, string, MethodInfo?) Get the CLI argument host property Declaration public static PropertyInfoExt? GetCliArgumentHostProperty(this Type api, string arg, MethodInfo? mi = null) Parameters Type Name Description Type api API type string arg Argument (excluding dash prefix) MethodInfo mi API method Returns Type Description PropertyInfoExt Host property | Edit this page View Source GetCliArgumentType(Type) Get the CLI argument type Declaration public static CliArgumentTypes GetCliArgumentType(this Type type) Parameters Type Name Description Type type Argument type Returns Type Description CliArgumentTypes CLI argument type | Edit this page View Source GetCliDescription(MethodInfo) Get the CLI description Declaration public static string? GetCliDescription(this MethodInfo mi) Parameters Type Name Description MethodInfo mi API method Returns Type Description string CLI description | Edit this page View Source GetCliDescription(ParameterInfo) Get the CLI description Declaration public static string? GetCliDescription(this ParameterInfo pi) Parameters Type Name Description ParameterInfo pi Parameter Returns Type Description string CLI description | Edit this page View Source GetCliDescription(PropertyInfo) Get the CLI description Declaration public static string? GetCliDescription(this PropertyInfo pi) Parameters Type Name Description PropertyInfo pi Property Returns Type Description string CLI description | Edit this page View Source GetCliDescription(Type) Get the CLI description Declaration public static string? GetCliDescription(this Type type) Parameters Type Name Description Type type API type Returns Type Description string CLI description | Edit this page View Source GetCliTitle(MethodInfo) Get the CLI title Declaration public static string GetCliTitle(this MethodInfo mi) Parameters Type Name Description MethodInfo mi API method Returns Type Description string CLI title | Edit this page View Source GetCliTitle(ParameterInfo) Get the CLI title Declaration public static string GetCliTitle(this ParameterInfo pi) Parameters Type Name Description ParameterInfo pi Parameter Returns Type Description string CLI title | Edit this page View Source GetCliTitle(PropertyInfo) Get the CLI title Declaration public static string GetCliTitle(this PropertyInfo pi) Parameters Type Name Description PropertyInfo pi Property Returns Type Description string CLI title | Edit this page View Source GetCliTitle(Type) Get the CLI title Declaration public static string GetCliTitle(this Type type) Parameters Type Name Description Type type API type Returns Type Description string CLI title | Edit this page View Source GetExportedApiMethodNames(Type) Get the exported API methods Declaration public static IEnumerable<string> GetExportedApiMethodNames(this Type api) Parameters Type Name Description Type api API type Returns Type Description IEnumerable<string> Exported API method names (sorted ascending) | Edit this page View Source GetExportedApiMethods(Type) Get the exported API methods Declaration public static IEnumerable<MethodInfo> GetExportedApiMethods(this Type api) Parameters Type Name Description Type api API type Returns Type Description IEnumerable<MethodInfo> Exported API methods | Edit this page View Source IsCliValueRequired(ParameterInfo, NullabilityInfoContext?) Is a CLI argument value required? Declaration public static bool IsCliValueRequired(this ParameterInfo pi, NullabilityInfoContext? nic = null) Parameters Type Name Description ParameterInfo pi Parameter NullabilityInfoContext nic NullabilityInfoContext Returns Type Description bool Is required? | Edit this page View Source IsCliValueRequired(PropertyInfo, NullabilityInfoContext?) Is a CLI argument value required? Declaration public static bool IsCliValueRequired(this PropertyInfo pi, NullabilityInfoContext? nic = null) Parameters Type Name Description PropertyInfo pi Property NullabilityInfoContext nic NullabilityInfoContext Returns Type Description bool Is required?"
  },
  "api/wan24.CLI.StdErrAttribute.html": {
    "href": "api/wan24.CLI.StdErrAttribute.html",
    "title": "Class StdErrAttribute | wan24-CLI",
    "keywords": "Class StdErrAttribute Attribute for a CLI API method which uses STDERR output Inheritance object Attribute StdErrAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class StdErrAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source StdErrAttribute(string) Attribute for a CLI API method which uses STDERR output Declaration public StdErrAttribute(string description) Parameters Type Name Description string description Description Remarks Constructor Properties | Edit this page View Source Description Description Declaration public string Description { get; } Property Value Type Description string"
  },
  "api/wan24.CLI.StdInAttribute.html": {
    "href": "api/wan24.CLI.StdInAttribute.html",
    "title": "Class StdInAttribute | wan24-CLI",
    "keywords": "Class StdInAttribute Attribute for a CLI API method which uses STDIN input Inheritance object Attribute StdInAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class StdInAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source StdInAttribute(string, bool) Attribute for a CLI API method which uses STDIN input Declaration public StdInAttribute(string description, bool required = false) Parameters Type Name Description string description Description bool required Is required? Remarks Constructor Properties | Edit this page View Source Description Description Declaration public string Description { get; } Property Value Type Description string | Edit this page View Source Required Is required? Declaration public bool Required { get; } Property Value Type Description bool"
  },
  "api/wan24.CLI.StdOutAttribute.html": {
    "href": "api/wan24.CLI.StdOutAttribute.html",
    "title": "Class StdOutAttribute | wan24-CLI",
    "keywords": "Class StdOutAttribute Attribute for a CLI API method which uses STDOUT output Inheritance object Attribute StdOutAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class StdOutAttribute : Attribute Remarks Constructor Constructors | Edit this page View Source StdOutAttribute(string, bool) Attribute for a CLI API method which uses STDOUT output Declaration public StdOutAttribute(string description, bool required = false) Parameters Type Name Description string description Description bool required Is required? Remarks Constructor Properties | Edit this page View Source Description Description Declaration public string Description { get; } Property Value Type Description string | Edit this page View Source Required Is required? Declaration public bool Required { get; } Property Value Type Description bool"
  },
  "api/wan24.CLI.StringExtensions.html": {
    "href": "api/wan24.CLI.StringExtensions.html",
    "title": "Class StringExtensions | wan24-CLI",
    "keywords": "Class StringExtensions string extensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public static class StringExtensions Methods | Edit this page View Source RemoveDashPrefix(string) Remove the dash prefix from a CLI argument Declaration public static string RemoveDashPrefix(this string str) Parameters Type Name Description string str CLI argument Returns Type Description string CLI argument without dash prefix"
  },
  "api/wan24.CLI.VividConsoleLogger.html": {
    "href": "api/wan24.CLI.VividConsoleLogger.html",
    "title": "Class VividConsoleLogger | wan24-CLI",
    "keywords": "Class VividConsoleLogger Vivid console logger Inheritance object LoggerBase VividConsoleLogger Implements ILogger Inherited Members LoggerBase.BeginScope<TState>(TState) LoggerBase.IsEnabled(LogLevel) LoggerBase.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) LoggerBase.GetMessage<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>, bool) LoggerBase.Level LoggerBase.Next object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.CLI Assembly: wan24CLI.dll Syntax public class VividConsoleLogger : LoggerBase, ILogger Remarks Constructor Constructors | Edit this page View Source VividConsoleLogger(in LogLevel?, in ILogger?) Vivid console logger Declaration public VividConsoleLogger(in LogLevel? level = null, in ILogger? next = null) Parameters Type Name Description LogLevel? level Log level ILogger next Next logger Remarks Constructor Properties | Edit this page View Source CriticalColor Critical log level color Declaration public string CriticalColor { get; set; } Property Value Type Description string | Edit this page View Source DebugColor Debug log level color Declaration public string DebugColor { get; set; } Property Value Type Description string | Edit this page View Source ErrorColor Error log level color Declaration public string ErrorColor { get; set; } Property Value Type Description string | Edit this page View Source InformationColor Information log level color Declaration public string InformationColor { get; set; } Property Value Type Description string | Edit this page View Source TraceColor Trace log level color Declaration public string TraceColor { get; set; } Property Value Type Description string | Edit this page View Source WarningColor Warning log level color Declaration public string WarningColor { get; set; } Property Value Type Description string | Edit this page View Source WriteToStdErr Write to STDERR? Declaration public bool WriteToStdErr { get; set; } Property Value Type Description bool Methods | Edit this page View Source LogInt<TState>(LogLevel, EventId, TState, Exception?, Func<TState, Exception?, string>) Writes a log entry Declaration protected override void LogInt<TState>(LogLevel logLevel, EventId eventId, TState state, Exception? exception, Func<TState, Exception?, string> formatter) Parameters Type Name Description LogLevel logLevel Level EventId eventId Event ID TState state State Exception exception Exception Func<TState, Exception, string> formatter Formatter Type Parameters Name Description TState State type Overrides LoggerBase.LogInt<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) Implements ILogger"
  },
  "api/wan24.CLI.html": {
    "href": "api/wan24.CLI.html",
    "title": "Namespace wan24.CLI | wan24-CLI",
    "keywords": "Namespace wan24.CLI Classes CliApi CLI API helper CliApiArgumentInfo CLI API argument informations CliApiAttribute Attribute for a CLI API type, method and property and parameters CliApiContext CLI API context CliApiFileStreamAttribute CLI API FileStream argument value attribute CliApiHelper CLI API default helper CliApiInfo CLI API informations CliApiInfosExtensions CLI API informations extensions CliApiMethodInfo CLI API method informations CliAppConfig CLI app configuration (wan24.Core.AppConfig) CliArgException Thrown on CLI argument error CliArgumentsExtensions wan24.Core.CliArguments extensions CliHelpApi CLI help API CliProcessHelper CLI process helper CliStream CLI stream (STDIN/-OUT) ConsoleColorProfile Console color profile ConsoleIoHelper Console I/O helper ExitCodeAttribute Attrbute for documenting CLI API method exit codes ExitCodeInfo Exit code information ReflectionExtensions Reflection extensions StdErrAttribute Attribute for a CLI API method which uses STDERR output StdInAttribute Attribute for a CLI API method which uses STDIN input StdOutAttribute Attribute for a CLI API method which uses STDOUT output StringExtensions string extensions VividConsoleLogger Vivid console logger Interfaces ICliApiErrorHandler Interface for a CLI API which implements error handling ICliApiHelpProvider Interface for a CLI API which provides context help ICliApiHelper Interface for a CLI API helper ICliArguments Interface for a type which hosts CLI arguments (the type needs to export a public constructor without any or with DI servable-only parameters; the type can be used as an API method parameter type (property type-usage isn't supported)) Enums CliArgumentHosts CLI argument type enumeration CliArgumentTypes CLI argument types ConsoleIoHelper.Format I/O exchange formats enumeration Delegates CliApi.ParseType_Delegate Delegate for a custom argument type parser (needs to throw on error) CliHelpApi.DetailHelp_Delegate Delegate for a help details handler"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-CLI",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-CLI | wan24-CLI",
    "keywords": "wan24-CLI This library contains some CLI app helpers. It uses the Spectre.Console library for console output. Spectre.Console contains some of the functionality this library provides, but in a different style, which may not meet some developers needs. The goal of this library is to provide a tool for (even more) rapid CLI app API development. Usage Create a CLI API type: [CliApi] public class YourCliApi { public YourCliApi() { } [CliApi, Required] public string Value { get; set; } = null!; [CliApi] public void YourApiMethod() { Console.WriteLine(Value); } } In your CLI apps startup: await wan24.Core.Bootstrap.Async(); Translation.Current = Translation.Dummy;// Or initialize with your own translations return await CliApi.RunAsync(args); Usage of your CLI API: dotnet app.dll --value 'Hello world!' CLI argument types Key/value pairs A key/value pair is indicated with a --[key], followed by its value. Key with multiple values A key may allow a value list, which follows the key. If a 2nd value starts with a dash, it needs to be prepended with another key indicator - example: dotnet app.dll --key value1 value2 --key -value3 Flags A flag is inidicated with a -[flag], having no value following. Value quoting A value may be quoted using single or double quotes. If quoted, the value needs to be escaped for JSON decoding. A backslash needs double escaping. Supported argument types Per default these CLR types can be parsed from the CLI argument list: bool: Flag argument string: Simple string (key/)value argument string[]: Simple string (key/)value list argument FileStream: Simple string (key/)value argument using CliApiFileStream attribute FileStream[]: Simple string (key/)value argument using CliApiFileStream attribute All other CLR types need to be given as JSON encoded values, or you use a custom argument parser - example for float values: CliApi.CustomArgumentParsers[typeof(float)] = (name, type, arg, attr) => float.Parse(arg); This custom parser will now be used for float argument types. If you want to use JSON decoding instead, set the ParseJson property value of the CliApi attribute of the property or method parameter to true. The CliApiAttribute allows overriding the CanParseArgument property and the ParseArgument method to implement a custom argument value type parsing within the attribute directly. FileStream argument value type using CliApiFileStreamAttribute A property or a method parameter type may be FileStream or FileStream[], if the CliApiFileStream attribute was used. The attribute allows to set how to create the filestream using wan24.Core.FsHelper.CreateFileStream. The CliApiFileStreamAttribute contains a custom argument value parser which may also be overridden, if required. Keyless parameters Example: dotnet app.dll -flag value1 --key value2 - value3 value4 -flag is a flag, while value1 is a keyless value, and value2 will be stored to the key key. value3 and value4 are appended to the keyless values list of the parsed CliArguments instance. The single dash is used to separate them from the value list for key. Another example: dotnet app.dll value1 value2 value3 ... -flag --key valueN All arguments before -flag are handled as keyless values. For binding keyless values to a CLI argument property or parameter, the CliApi attribute constructor which takes a keyless value offset needs to be used (more about that in the following chapters). STDIN and STDOUT Uing the StdIn and StdOut attributes you can add STDIN/-OUT usage informations to the method help. CLI argument binding As API type property This is the recommended way for the argument binding: [CliApi, Required] public string Value { get; set; } = null!; This binding will set the value of the argument --value to the property before invoking the requested API method. Don't worry about the = null! initialization of the property: The API instance will be validated. If --value wasn't given, an usage help will be displayed. As API method parameter [CliApi] public void YourApiMethod([CliApi] string value) { ... } This binding will set the value of the argument --value to the parameter, when invoking the requested API method. As argument object The argument object: public class YourApiMethodArguments : ICliArguments { [CliApi, Required] public string Value { get; set; } = null!; } By implementing the empty ICliArguments interface, an argument type won't be JSON parsed, but used as argument object. Don't worry about the = null! initialization of the property: The API instance will be validated. If --value wasn't given, an usage help will be displayed. The API method which will consume the argument object: [CliApi] public void YourApiMethod([CliApi] YourApiMethodArguments args) { ... } Binding keyless arguments Example API type: [CliApi] public class YourCliApi { public YourCliApi() { } [CliApi(0)] public string KeyLessValue1 { get ; set; } = null!; [CliApi(1)] public string[] KeyLessValues2 { get; set; } = null!; [CliApi] public string NamedValue { get; set; } = null!; [CliApi] public void YourApiMethod() { .... } } Example CLI app call: dotnet app.dll keyLessValue1 --namedValue 'Named value' keyLessValue2a keyLessValue2b Now the properties of YourCliApi have these values: KeyLessValue1: \"keyLessValue1\" NamedValue: \"Named value\" KeyLessValues2: string[] { \"keyLessValue2a\", \"keyLessValue2b\"} A keyless value list must always be taken from the last possible offset. Multiple API types and multiple methods within an API type Serving multiple APIs: await CliApi.RunAsync(args, default, typeof(YourCliApi1), typeof(YourCliApi2), ...); The first keyless argument needs to be the API name (f.e. YourApiType). Keyless argument bindings within your APIs still begin with 0. When serving multiple API methods within an API type, the second keyless argument needs to be the API method name. If you serve only one API type, the name of the API method will be taken from the first keyless argument. Keyless argument bindings within your APIs still begin with 0. Custom API, method and argument names You can give a custom API/method/argument name to the CliApi attribute constructor. JSON parsed arguments Set the ParseJson property value of the CliApi attribute for an argument to true to enable JSON parsing of the given value. NOTE: JSON parsing must be enabled for numeric types, for example! API documentation API documentation will be generated automatic and be displayed on wrong usage. To add details, you can use the DisplayText (for titles) and Description attributes. If an argument isn't a flag, you can add an example value to display to the Example property of the CliApi attribute. You may also specify a static string property which returns the help text for an API/method/argument by setting the properties namespace and name to the HelpTextProperty property of the CliApi attribute. The text contents will be parsed, and Spectre.Console markup is supported also. You may use these variables: %{CommandLine}: The command line used to call the CLI in general %{API}: The current API name %{Method}: The current API method name The wan24-Core string parser is being used for this. Another option for help details is the HelpMethod property of the CliApi attribute, which may contain a public static API element help method name (see CliHelpApi.DetailHelp-Delegate). This method will then be executed, if help details for an element have been requested. If your API methods return an exit code, you can add documentation for them using the ExitCode attribute on the method. Help output uses the Spectre.Console markup syntax for printing rich output to an ANSI console. The default colors used can be customized in the static CliApiInfo properties. All help output can be localized. For a full localization, you can parse the wan24-CLI source code with POEdit, for example, too. Parser should look for these phrases: _(\"...\") (single underscore) __(\"...\") (double underscore) For intercepting errors there are multiple ways: ICliApiErrorHandler If your API type implements the ICliApiErrorHandler interface, errors during processing will be handled by your API type. In case your method can't handle the error, you can forward the error handling to the default error processing by calling CliApi.DisplayHelpAsync and setting the value of the parameter useApi to false. ICliApiHelpProvider If your API type implements the ICliApiHelpProvider interface, wrong usage can be handled by your API type. NOTE: If your API type implements ICliApiErrorHandler, too, the help provider will only be called, if there was no exception. In case your method can't display the context help, you can forward the help handling to the default help display processing by calling CliApi.DisplayHelpAsync and setting the value of the parameter useApi to false. ICliApiHelper If you create a type which implements the ICliApiHelper interface, you can set an instance as global help provider to the CliApi.Helper property for a customized help output in any case. The used type may implement ICliApiHelper and/or ICliApiHelpProvider, too. NOTE: Interfaces implemented in an API type will be used in the first place! The CliApi.Helper instance will only be used, if the API type wasn't determined yet, or it doesn't implement error handling / help providing. In case your CLI app serves a CliHelpApi type, too, it'll be used before calling CliApi.Helper. CAUTION: Do not call CliApi.DisplayHelpAsync from a ICliApiHelper instance, it may cause an endless loop! CliHelpApi Serve the CliHelpApi API type for serving help for APIs/methods/arguments: # Display a list of possible API names dotnet app.dll help (-details) # Display API details dotnet app.dll help --api [apiName] (-details) # Display API method details dotnet app.dll help --api [apiName] --method [methodName] (-details) The optional -details flag will force the help API to output more available informations. TIP: Serve the CliHelpApi as the first (and default) API to display the help on any general wrong usage. Console I/O If you'd like to support dynamic console input/output formats, you can use the ConsoleIoHelper.GetInput/SendOutput(Async) method for that. They support console input from arguments environment variables user input (also password) STDIN in the input formats raw binary UTF-8 base64 hexadecimal byte encoded and can encode console output to those formats also. Using these helper methods you can support dynamic I/O formats and sources using a single line of code. Example: [CliApi] [StdIn(\"/path/to/inputFile\")] [StdOut(\"/path/to/outputFile\")] public int YourApiMethod( [CliApi] string? input = null, [CliApi] string? output = null, [CliApi(ParseJson = true)] ConsoleIoHelper.Format inFormat = ConsoleIoHelper.Format.Base64, [CliApi(ParseJson = true)] ConsoleIoHelper.Format outFormat = ConsoleIoHelper.Format.Base64, [CliApi] bool useStdIn = false ) { Stream inputStream = ConsoleIoHelper.GetInput(input, useStdIn, \"Input: \", format: inFormat); // Now inputStream contains the input data from any source, // converted from UTF-8, base64, hex or byte encoded to raw binary return ConsoleIoHelper.SendOutput(outputStream, output, format: outFormat, exitCode: 0); } Input from STDIN, output to STDOUT: dotnet app.dll YourApiMethod -useStdIn < /path/to/inputFile > /path/to/outputFile Input from a file, output to STDOUT: dotnet app.dll YourApiMethod --input /path/to/inputFile --inFormat \"Binary | File\" > /path/to/outputFile Input from the user (UTF-8 encoded string), output to STDOUT: dotnet app.dll YourApiMethod --inFormat String > /path/to/outputFile Input from an environment variable (UTF-8 encoded string), output to STDOUT: dotnet app.dll YourApiMethod --input VARIABLE_NAME --inFormat \"String | Environment\" > /path/to/outputFile Input from STDIN, output base64 encoded to STDOUT: dotnet app.dll YourApiMethod -useStdIn --outFormat Base64 < /path/to/inputFile > /path/to/outputFile Input from STDIN, output base64 encoded to file: dotnet app.dll YourApiMethod -useStdIn --output /path/to/outputFile --outFormat Base64 < /path/to/inputFile These I/O formats are supported: Binary: raw binary (always used for input files) String: UTF-8 encoded Base64: base64 encoded Hex: hexadecimal encoded ByteEncoded: byte encoded Input may come from STDIN CLI argument envionment variable file Output may go to STDOUT file The ConsoleIoHelper.GetInput method also allows to display a secret user input prompt (see available parameters). Color profiles The ConsoleColorProfile allows to provide multiple color profiles which can be configured using CLI arguments (wan24.Core.CliConfig) in a JSON configuration file (CliAppConfig) from code Example for setting a color profile from CLI arguments: dotnet app.dll ... --wan24.CLI.ConsoleColorProfile.ApplyRegistered PROFILE Example for setting a color profile in a JSON configuration: { ... \"ColorProfile\": \"PROFILE\", ... } Example for defining color profiles in a JSON configuration: { ... \"ColorProfiles\": [ { \"Name\": \"PROFLE\", \"BackGroundColor\": \"black\", ... }, ... ] ... } NOTE: Single colors can be overridden in the JSON structure by using the color properties at the root level. Color profiles willbe applied to the static CliApiInfo color properties. Localization wan24-CLI uses the wan24-Core localization helpers. If you want to localize your CLI API help, you can include the wan24-CLI source code and match the keyword source _(\"...\") to the keyword extraction configuration. All help texts defined as API/method/argument attributes will be translated before they're going to be displayed. Processing multiple API method calls within one process Example: dotnet app.dll --key value - --key value2 - --key value3 A single dash is used to separate API call arguments for one API method call. How to process the three API method calls: await CliApi.RunMultiAsync(args); There are some limitations: API method calls will be processed sequential (not in parallel) The first API method which fails or returns an exit code !=0 will break the processing loop API calls without any argument aren't supported and will be ignored Since a single dash is used as argument separator, it can't be used as argument for your APIs Dash and double dash handling A single dash is a nameless flag, while a double dash is a nameless key which requires a value to follow. Double name apperance handling A repeated flag will be ignored, while a repeated key which required a value creates a value list. An API (method/arguments) name should be unique - otherwise the APIs (methods/arguments) would overwrite each other. CLI API reflection FrozenDictionary<string, CliApiInfo> apiInfos = CliApiInfo.Create(typeof(YourCliApi), typeof(CliHelpApi), ...); The CliApiInfosExtensions have some useful helper methods. Using the ReflectionExtensions and CliApiContext methods you may also reflect .NET reflection info objects or a CLI API context instance for CLI API object detail informations. Header output The CliApi.GeneralHeader and CliApi.HelpHeader properties store a header, which will be displayed in general, or if help is being displayed (if there's a general header, the help header will never be displayed). Running as a dotnet tool Since there's no way to determine if the process is running as dotnet tool, the CLI command would need to be specified in order to get correct usage examples from the CLI help API: CliApi.CommandLine = \"dotnet tool run yourapp\"; Best practice You use this library, 'cause it matches your requirements (which Spectre.Console alone does not in some cases). You can work work the .NET Console methods, but since this library references Spectre.Console you could enrich your CLI app with formatted console output easily, if your app runs within an ANSI console. Tips: Create one API type for methods which work with one entity and may share argument definitions Use API type properties for defining CLI arguments Use ICliArguments object parameters for encapsulating API method arguments within an arguments type, if using API type properties is not an option Use data annotations for ensuring valid arguments (the ObjectValidation NuGet package is being used for deep object validations, if CLI arguments are being stored in properties)"
  }
}